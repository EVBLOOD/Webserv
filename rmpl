// int main()
// {
//     infos *ret;
//     infos hints;
//     ret = NULL;
//     bzero(&hints, sizeof(infos));
//     hints.ai_family = AF_UNSPEC;//AF_INET;
//     hints.ai_flags = AI_PASSIVE;
//     hints.ai_socktype = SOCK_STREAM;
//     // hints.ai_protocol = IPPROTO_TCP;
//     if (getaddrinfo("localhost", "8080", &hints, &ret) == -1)
//     {
//         std::cerr << "get address info joking!\n";
//         return 1;
//     }
//     int file_ds = socket(ret->ai_family, ret->ai_socktype ,ret->ai_protocol);
//     if (file_ds == -1)
//     {
//         std::cerr << "socket creating error!\n";
//         return 1;
//     }
//     fcntl(file_ds, F_SETFL, O_NONBLOCK);
//     // if (connect(file_ds, ret->ai_addr, ret->ai_addrlen) == -1) // just for client code !
//     // {
//     //     std::cerr << "connect error!\n";
//     //     return 1;
//     // }
//     if (bind(file_ds, ret->ai_addr, ret->ai_addrlen) == -1)
//     {
//         std::cerr << "binding error!\n";
//         return 1;
//     }
//     if (listen(file_ds, 10) == -1)
//     {
//         std::cerr << "listning ? !\n";
//         return 1;
//     }
//     int new_fileds;
//     storage getinfos;
//     socklen_t getinfos_size = sizeof(storage);
//     new_fileds = accept(file_ds, (struct sockaddr *)&getinfos, &getinfos_size);
//     if ( new_fileds == -1)
//     {
//         std::cerr << "accept ? !\n";
//         return 1;
//     }
//     char req[100000];
//     while (1)
//     {
//         int rd = recv(new_fileds, &req, 100000, 0);
//         if (rd == 0)
//         {
//             std::cerr << "connection end\n";
//             return 1;
//         }
//         if (rd == -1)
//         {
//             std::cerr << "connection error !\n";
//             return 1;
//         }
//         req[rd] = '\0';
//         std::cout << req << "\n";
//         // send(new_fileds, "Hello, world!", 13, 0);
//         std::string x = "content-type: text/html;\r\n<h1>helooe</h1>\r\n\r\n";
//         write(new_fileds, x.c_str(), 66);
//     }
//     // while (1);
//     freeaddrinfo(ret);
//     close(file_ds);
// }